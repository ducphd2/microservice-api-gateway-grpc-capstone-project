syntax = "proto3";

package merchant_branch;

import "commons.proto";

message UpdateMerchantBranchInput {
    int32 id = 1;
    MerchantBranch data = 2;
}

message InputCreateRequest {
    string name = 1;
    string phone = 2;
    string address = 3;
    int32 userId = 4;
    int32 merchantId = 5;
    int32 cityCode = 6;
    int32 districtCode = 7;
    optional int32 wardCode = 8;
}

message MerchantBranch {
    int32 id = 1;
    string name = 2;
    string phone = 3;
    string address = 4;
    string createdAt = 5;
    string updatedAt = 6;
    int32 userId = 7;
    int32 merchantId = 8;
    int32 cityCode = 9;
    int32 districtCode = 10;
    optional int32 wardCode = 11;
}

message MerchantBranchEdge {
    MerchantBranch node = 1;
    string cursor = 2;
}  

message FindMerchantBranchesPayload {
    repeated MerchantBranchEdge edges = 1;
    commons.PageInfo pageInfo = 2;
}

service MerchantBranchServiceGrpc {
    rpc find (commons.Query) returns (FindMerchantBranchesPayload) {}
    rpc findOne (commons.Query) returns (MerchantBranch) {}
    rpc findById (commons.Id) returns (MerchantBranch) {}
    rpc findByUserId (commons.Query) returns (FindMerchantBranchesPayload) {}
    rpc create (InputCreateRequest) returns (MerchantBranch) {}
    rpc update (UpdateMerchantBranchInput) returns (MerchantBranch) {}
    rpc destroy (commons.Id) returns (commons.Count) {}
    rpc count (InputCreateRequest) returns (commons.Count) {}
}
