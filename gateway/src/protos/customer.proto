syntax = "proto3";

package customer;

import "commons.proto";
import "user.proto";

message Customer {
  string id = 1;
  int32 userId = 2;
  string fullName = 3;
  string email = 4;
  string password = 5;
  string contact = 6;
  string level = 7;
  string gender = 8;
  int32 branchId = 9;
  string createdAt = 10;
  string updatedAt = 11;
  optional int32 dobDay = 12;
  optional int32 dobMonth = 13;
  optional int32 dobYear = 14;
  optional string occupation = 15;
  optional string avatar = 16;
  optional string referrer = 17;
  optional string referrerCode = 18;
  optional string customerCode = 19;
  optional string facebook = 20;
  optional string zaloPhone = 21;
  optional int32 height = 22;
  optional int32 weight = 23;
  optional string memberCardNo = 24;
  optional string address = 25;
  optional int32 cityCode = 26;
  optional int32 districtCode = 27;
  optional string company = 28;
  optional string taxNo = 29;
  optional string note = 30;
  optional string relatedUser = 31;
  optional string relatedUserRole = 32;
  optional string relatedUserPhone = 33;
}

message CreateCustomerInput {
  string fullName = 1;
  string email = 2;
  string password = 3;
  string contact = 4;
  string level = 5;
  string gender = 6;
  int32 branchId = 7;
  optional int32 dobDay = 8;
  optional int32 dobMonth = 9;
  optional int32 dobYear = 10;
  optional string occupation = 11;
  optional string avatar = 12;
  optional string referrer = 13;
  optional string referrerCode = 14;
  optional string customerCode = 15;
  optional string facebook = 16;
  optional string zaloPhone = 17;
  optional int32 height = 18;
  optional int32 weight = 19;
  optional string memberCardNo = 20;
  optional string address = 21;
  optional int32 cityCode = 22;
  optional int32 districtCode = 23;
  optional string company = 24;
  optional string taxNo = 25;
  optional string note = 26;
  optional string relatedUser = 27;
  optional string relatedUserRole = 28;
  optional string relatedUserPhone = 29;
}

message UpdateCustomerInput {
  string id = 1;
  Customer data = 2;
}

message CustomerEdge {
  Customer node = 1;
  string cursor = 2;
}

message FindCustomersPayload {
  repeated CustomerEdge edges = 1;
  commons.PageInfo pageInfo = 2;
}

service CustomerServiceGrpc {
  rpc find (commons.Query) returns (FindCustomersPayload) {}
  rpc findById (commons.Id) returns (Customer) {}
  rpc findOne (commons.Query) returns (Customer) {}
  rpc count (commons.Query) returns (commons.Count) {}
  rpc create (CreateCustomerInput) returns (Customer) {}
  rpc update (UpdateCustomerInput) returns (Customer) {}
  rpc destroy (commons.Query) returns (commons.Count) {}
}
