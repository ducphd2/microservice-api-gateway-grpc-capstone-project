syntax = "proto3";

package customer;

import "commons.proto";
import "user.proto";

message Customer {
  string id = 1;
  string level = 2;
  int32 userId = 3;
  int32 createdAt = 4;
  int32 updatedAt = 5;
  optional int32 branchId = 6;
  optional string referrer = 7;
  optional string referrerCode = 8;
}

message CustomerInput {
  string id = 1;
  string level = 2;
  int32 userId = 3;
  optional int32 branchId = 4;
  optional string referrer = 5;
  optional string referrerCode = 6;
}

message CustomerEdge {
  Customer node = 1;
  string cursor = 2;
}

message CreateCustomerInput {
  user.CreateUserInput user = 1;
  CustomerInput customer = 2;
}

message UpdateCustomerInput {
  string id = 1;
  Customer data = 2;
}

message CreateCustomerRes {
  Customer customer = 1;
  user.User user = 2;
}

message FindCustomersPayload {
  repeated CustomerEdge edges = 1;
  commons.PageInfo pageInfo = 2;
}

service CustomerServiceGrpc {
  rpc find (commons.Query) returns (FindCustomersPayload) {}
  rpc findById (commons.Id) returns (Customer) {}
  rpc findOne (commons.Query) returns (Customer) {}
  rpc count (commons.Query) returns (commons.Count) {}
  rpc create (CreateCustomerInput) returns (CreateCustomerRes) {}
  rpc update (UpdateCustomerInput) returns (Customer) {}
  rpc destroy (commons.Query) returns (commons.Count) {}
}
