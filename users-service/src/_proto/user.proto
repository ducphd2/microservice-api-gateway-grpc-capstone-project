syntax = "proto3";

package user;

import "commons.proto";

message User {
  int32 id = 1;
  string fullName = 2;
  string email = 3;
  string password = 4;
  string status = 5;
  string role = 6;
  string gender = 7;
  string contact = 8;
  int32 dobDay = 9;
  int32 dobMonth = 10;
  int32 dobYear = 11;
  int32 createdAt = 12;
  int32 updatedAt = 13;
  optional string occupation = 14;
  optional string avatar = 15;
}

message UserEdge {
  User node = 1;
  string cursor = 2;
}

message CreateUserInput {
  string fullName = 2;
  string email = 3;
  string password = 4;
  string status = 5;
  string role = 6;
  string gender = 7;
  string contact = 8;
  int32 dobDay = 9;
  int32 dobMonth = 10;
  int32 dobYear = 11;
  optional string occupation = 12;
  optional string avatar = 13;
}

message UpdateUserInput {
  string id = 1;
  User data = 2;
}

message FindUsersPayload {
  repeated UserEdge edges = 1;
  commons.PageInfo pageInfo = 2;
}

service UserServiceGrpc {
  rpc find (commons.Query) returns (FindUsersPayload) {}
  rpc findById (commons.Id) returns (User) {}
  rpc findOne (commons.Query) returns (User) {}
  rpc count (commons.Query) returns (commons.Count) {}
  rpc create (CreateUserInput) returns (User) {}
  rpc update (UpdateUserInput) returns (User) {}
  rpc destroy (commons.Query) returns (commons.Count) {}
}